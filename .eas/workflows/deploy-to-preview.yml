name: Deploy to preview

on:
  pull_request:
    branches: ['main']
    paths:
      - src/**
      - index.js
      - app.config.ts
      - package.json

jobs:
  # 0) Read the user-facing version from package.json and export it as a workflow output
  read_app_version:
    name: Read app version
    steps:
      - uses: eas/checkout
      - id: read
        # prints just the semver from package.json
        run: |
          VER=$(node -p "require('./package.json').version")
          set-output app_version "$VER"
    outputs:
      app_version: ${{ steps.read.outputs.app_version }}

  # 1) Ask EAS if we already have a compatible build for this version
  get_android_build:
    name: Check for existing Android build (same runtime/app version)
    needs: [read_app_version]
    type: get-build
    params:
      platform: android
      profile: preview
      runtime_version: ${{ needs.read_app_version.outputs.app_version }}
      app_version: ${{ needs.read_app_version.outputs.app_version }}

  # 2) Ask EAS if we already have a compatible iOS build
  # get_ios_build:
  #   name: Check for existing iOS build (same runtime/app version)
  #   needs: [read_app_version]
  #   type: get-build
  #   params:
  #     platform: ios
  #     profile: preview
  #     runtime_version: ${{ needs.read_app_version.outputs.app_version }}
  #     app_version: ${{ needs.read_app_version.outputs.app_version }}

  # 3) If a build exists => push OTA update
  update_if_build:
    name: Publish preview update (if build exists)
    # needs: [get_android_build, get_ios_build, read_app_version]
    needs: [get_android_build, read_app_version]
    # if: ${{ needs.get_android_build.outputs.build_id || needs.get_ios_build.outputs.build_id }}
    if: ${{ needs.get_android_build.outputs.build_id }}
    type: update
    environment: preview
    params:
      platform: android
      channel: preview
      message: "Preview update for PR #${{ github.event.pull_request.number }} - ${{ github.event.pull_request.title }}"

  # 4) If Android build missing => create one
  build_if_missing:
    name: Build Android (if no build for this version)
    needs: [get_android_build]
    if: ${{ !needs.get_android_build.outputs.build_id }}
    type: build
    params:
      platform: android
      profile: preview

  # 5) If iOS build missing => create one
  # build_ios_if_missing:
  #   name: Build iOS (if no build for this version)
  #   needs: [get_ios_build]
  #   if: ${{ !needs.get_ios_build.outputs.build_id }}
  #   type: build
  #   params:
  #     platform: ios
  #     profile: preview